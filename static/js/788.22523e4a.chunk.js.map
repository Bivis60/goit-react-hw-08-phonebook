{"version":3,"file":"static/js/788.22523e4a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Layout/Layout.styled.js","components/Layout/Layout.js","pages/Contacts/Contact.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n  margin-bottom: 8px;\n  font-weight: 500;\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  font-weight: 500;\n  padding-top: 8px;\n  color: #000000;\n  padding-bottom: 8px;\n  border-radius: 4px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 3px -2px,\n    rgb(0 0 0 / 14%) 0px 3px 4px 0px, rgb(0 0 0 / 12%) 0px 1px 8px 0px;\n  cursor: pointer;\n  transition: color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: lightpink;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Label, Button } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [contact, setContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectContacts);\n  const name = contact.name;\n  const number = contact.number;\n\n  const handleChange = evt => {\n    setContact(prev => ({ ...prev, [evt.target.name]: evt.target.value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const enteredData = event.currentTarget.elements;\n\n    const contact = {\n      name: enteredData.name.value,\n      number: enteredData.number.value,\n    };\n    const isContactExist = contactList.find(\n      ({ name, number }) =>\n        name.toLowerCase() === contact.name.toLowerCase() ||\n        number.trim() === contact.number.trim()\n    );\n    if (isContactExist) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setContact({ name: '', number: '' });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          required\n        />\n      </Label>\n\n      <Label>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Li = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  gap: 8px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  font-weight: 500;\n  color: #000000;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-radius: 4px;\n  margin-left: 24px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 3px -2px,\n    rgb(0 0 0 / 14%) 0px 3px 4px 0px, rgb(0 0 0 / 12%) 0px 1px 8px 0px;\n  cursor: pointer;\n  transition: color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: lightpink;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { Span, Li, Button } from './ContactList.styled';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const contactFilter = useSelector(selectFilter);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibleList = () => {\n    const normalizedFilter = contactFilter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      {isLoading && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      <ul>\n        {getVisibleList().map(({ id, name, number }) => {\n          return (\n            <Li key={id}>\n              <Span>{name}: </Span>\n              <Span>{number}</Span>\n              <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                Delete\n              </Button>\n            </Li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Label } from 'components/ContactForm/ContactForm.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filetrData = useSelector(selectFilter);\n\n  return (\n    <Label>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={filetrData}\n        onChange={evt => dispatch(setFilter(evt.currentTarget.value.trim()))}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: fit-content;\n  padding: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  border: solid 2px ${p => p.theme.colors.text};\n  border-radius: 8px;\n  background-color: ${p => p.theme.colors.background};\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 3px -2px,\n    rgb(0 0 0 / 14%) 0px 3px 4px 0px, rgb(0 0 0 / 12%) 0px 1px 8px 0px;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './Layout.styled';\n\nexport const Layout = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nLayout.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Layout } from 'components/Layout/Layout';\n\nconst Contacts = () => {\n  return (\n    <Layout>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Form","styled","Label","Button","ContactForm","useState","name","number","contact","setContact","dispatch","useDispatch","contactList","useSelector","handleChange","evt","prev","target","value","resetForm","onSubmit","event","preventDefault","enteredData","currentTarget","elements","isContactExist","find","toLowerCase","trim","alert","addContact","type","pattern","title","onChange","required","Li","Span","ContactList","contactFilter","useEffect","fetchContacts","normalizedFilter","includes","getVisibleList","map","id","onClick","deleteContact","Filter","filetrData","setFilter","Container","p","theme","colors","text","background","Layout","children"],"sourceRoot":""}